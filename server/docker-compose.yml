services:
  db:
    container_name: globo-challenge-postgres
    image: bitnami/postgresql:latest
    restart: always
    environment:
      POSTGRES_HOST: ${DB_HOST}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_DB: ${DB_NAME}
      PG_DATA: /var/lib/postgresql/data
    ports:
      - 5432:5432
    volumes:
      - globo_challenge_database:/var/lib/postgresql/data
    networks:
      - globo_challenge_network

  rabbitmq:
    container_name: globo-challenge-rabbitmq
    image: rabbitmq:3-management
    restart: always
    environment:
      RABBITMQ_ERLANG_COOKIE: ${RABBITMQ_ERLANG_COOKIE}
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD}
    ports:
      - 5672:5672
      - 15672:15672
    networks:
      - globo_challenge_network
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq

  air:
    container_name: globo-challenge-hot-reload
    image: cosmtrek/air:latest
    working_dir: /app
    ports:
      - 8080:8080
    environment:
      DB_HOST: db
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}
      RABBITMQ_USER: ${RABBITMQ_USER}
      RABBITMQ_PASSWORD: ${RABBITMQ_PASSWORD}
      RABBITMQ_HOST: rabbitmq
    volumes:
      - .:/app
    networks:
      - globo_challenge_network
    depends_on:
      - db
      - rabbitmq

  prometheus:
    image: prom/prometheus
    container_name: globo-challenge-prometheus
    ports:
      - 9090:9090
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - globo_challenge_network

  grafana:
    image: grafana/grafana:latest
    container_name: globo-challenge-grafana
    ports:
      - 3001:3000
    depends_on:
      - prometheus
    networks:
      - globo_challenge_network

volumes:
  globo_challenge_database:
  rabbitmq_data:

networks:
  globo_challenge_network:
    driver: bridge
